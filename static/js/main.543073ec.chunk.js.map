{"version":3,"sources":["../../../src/hash.ts","ui/main.tsx","lib/ethereum.ts","ui/burnForm.tsx","ui/depositObject.tsx","index.tsx","../../../src/errors.ts","../../../src/logger.ts","../../../src/networks.ts","../../../src/promiEvent.ts","../../../src/types.ts","../../../src/callableClass.ts","../../../src/value.ts","../../../src/common.ts","../../../src/renVMHashes.ts","../../../src/assert.ts","../../../../src/api/indexer.ts","lib/mint.ts","../../../src/filecoin.ts","../../../src/signatureUtils.ts","ui/mintForm.tsx","ui/styles/metamask.svg"],"names":["msg","Tab","Wallet","getWallet","isTestnet","a","window","ethereum","web3","enable","wallet","Web3","currentProvider","eth","net","getId","networkID","Error","getBalance","token","getAccounts","web3Address","Ethereum","undefined","renRinkeby","initialize","RenNetwork","Testnet","getTokenContractAddress","tokenAddress","tokenContract","Contract","ERC20ABI","methods","decimals","call","balanceOf","balance","amount","BigNumber","div","exponentiatedBy","toNumber","toFixed","BurnForm","asset","renJS","network","React","errorMessage","setErrorMessage","recipientAddress","setRecipientAddress","setAmount","isPending","onSubmit","event","preventDefault","lte","burnMaximumValue","className","value","onChange","e","target","placeholder","Assets","get","name","toUpperCase","role","onClick","type","ExternalLink","children","props","rel","DepositObject","txHash","deposit","status","updateStatus","_params","from","to","depositDetails","showingFullError","setShowingFullError","showFullError","amountReadable","setAmountReadable","onStatus","newStatus","confirmations","setConfirmations","targetConfirmations","setTargetConfirmations","onConfirmation","confs","renVMStatus","setRenVMStatus","mintTransaction","setMintTransaction","step1","DepositStatus","DETECTED","handleDeposit","catch","error","String","message","ERROR","assetDecimals","console","submitting","setSubmitting","step2","submitDeposit","DONE","style","display","CONFIRMED","transaction","transactionExplorerLink","href","transactionID","SIGNED","disabled","length","slice","color","cursor","Map","set","symbol","Main","setAsset","setWallet","NETWORK","stagingRenJS","setBalance","onMarketChange","newAsset","then","Mint","tab","setTab","OrderedMap","deposits","setDeposits","addDeposit","top","thisToken","otherToken","allTokens","key","getMarket","Burn","Array","keys","map","ReactDOM","document","getElementById","LockAndMintStatus","logLevel","LogLevel","Log","httpProvider","HttpProvider","rpcProvider","OverwriteProvider","renVMProvider","RenVMProvider","RenJS","startMint","showAddress","onDeposit","Filecoin","Bitcoin","lockAndMint","Account","address","nonce","Ox","repeat","gatewayAddress","on","onRenVMStatus","onTransactionHash","hash","_logger","SimpleLogger","confirmed","retries","signed","lastError","sleep","findTransaction","mint","this","ClickToCopy","text","copied","setCopied","setTimeout","MintForm","ethereumAddress","setEthereumAddress","generatingAddress","setGeneratingAddress","depositAddress","setDepositAddress","JSON","stringify","useMetaMaskAccount","addressIsValid","match","alt","params","Buffer","toString","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","points","_ref4","SvgMetamask","_ref","svgRef","title","id","x","y","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef"],"mappings":"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","file":"static/js/main.543073ec.chunk.js","sourcesContent":["import createHash from \"create-hash\";\nimport createKeccakHash from \"keccak\";\nexport const keccak256 = (msg) => createKeccakHash(\"keccak256\").update(msg).digest();\nexport const ripemd160 = (msg) => createHash(\"rmd160\").update(msg).digest();\nexport const sha256 = (msg) => createHash(\"sha256\").update(msg).digest();\nexport const hash160 = (publicKey) => ripemd160(sha256(publicKey));\n//# sourceMappingURL=hash.js.map","// tslint:disable: no-console react-this-binding-issue\n\nimport * as React from \"react\";\n\nimport { Loading, SelectMarket } from \"@renproject/react-components\";\nimport { LockAndMintDeposit } from \"@renproject/ren/build/main/lockAndMint\";\nimport { OrderedMap } from \"immutable\";\n\nimport { Wallet } from \"../lib/ethereum\";\nimport { DepositStatus, stagingRenJS } from \"../lib/mint\";\nimport { BurnForm } from \"./burnForm\";\nimport { DepositObject } from \"./depositObject\";\nimport { MintForm } from \"./mintForm\";\n\ntype Asset = string;\nexport const Assets = new Map<Asset, { symbol: Asset; name: string }>()\n    .set(\"FIL\", {\n        symbol: \"FIL\",\n        name: \"Filecoin\",\n    })\n    .set(\"BTC\", {\n        symbol: \"BTC\",\n        name: \"Bitcoin\",\n    });\nconst defaultAsset = \"FIL\";\n\nconst NETWORK = \"testnet\";\n\nenum Tab {\n    Mint = \"Mint\",\n    Burn = \"Burn\",\n}\n\nexport const Main = () => {\n    const [asset, setAsset] = React.useState<Asset>(defaultAsset);\n    const [wallet, setWallet] = React.useState<Wallet | null>(null);\n\n    const isTestnet = NETWORK === \"testnet\" || NETWORK === \"devnet\";\n\n    React.useEffect(() => {\n        (async () => {\n            setWallet(await Wallet.getWallet(isTestnet));\n        })().catch((error) => setErrorMessage(error.message));\n    }, [isTestnet]);\n\n    const renJS = React.useMemo(() => stagingRenJS(), []);\n\n    const [errorMessage, setErrorMessage] = React.useState(\n        null as string | null,\n    );\n\n    const [balance, setBalance] = React.useState<string | null>(null);\n\n    const onMarketChange = React.useCallback(\n        (newAsset) => {\n            setAsset(newAsset);\n        },\n        [setAsset],\n    );\n\n    React.useEffect(() => {\n        (async () => {\n            setBalance(null);\n            if (wallet) {\n                Wallet.getBalance(wallet, asset)\n                    .then(setBalance)\n                    .catch(console.error);\n            } else {\n                setBalance(\"?\");\n            }\n        })().catch(console.error);\n    }, [wallet, asset, setBalance]);\n\n    const [tab, setTab] = React.useState<Tab.Mint | Tab.Burn>(Tab.Mint);\n\n    const [deposits, setDeposits] = React.useState(\n        OrderedMap<\n            string,\n            { deposit: LockAndMintDeposit; status: DepositStatus }\n        >(),\n    );\n\n    const addDeposit = React.useCallback(\n        (txHash: string, deposit: LockAndMintDeposit) => {\n            setDeposits((deposits) =>\n                deposits.get(txHash)\n                    ? deposits\n                    : deposits.set(txHash, {\n                          deposit: deposit,\n                          status: DepositStatus.DETECTED,\n                      }),\n            );\n        },\n        [setDeposits],\n    );\n\n    const updateStatus = React.useCallback(\n        (txHash: string, status: DepositStatus) => {\n            setDeposits((deposits) =>\n                deposits.set(txHash, { ...deposits.get(txHash)!, status }),\n            );\n        },\n        [setDeposits],\n    );\n\n    return (\n        <>\n            {isTestnet ? (\n                <div className=\"box testnet-warning\">TESTNET</div>\n            ) : null}\n            <div className=\"test-environment\">\n                <SelectMarket\n                    top\n                    thisToken={asset}\n                    otherToken={\"\"}\n                    allTokens={Assets}\n                    key={\"top\"}\n                    onMarketChange={onMarketChange}\n                    getMarket={() => {\n                        return undefined;\n                    }}\n                />\n                <div className=\"box\">\n                    Your ren{asset} balance: {balance ? balance : <Loading />}{\" \"}\n                    ren{asset}\n                </div>\n\n                <div>\n                    <div\n                        className={`tab ${\n                            tab === Tab.Mint ? \"tab--selected\" : \"\"\n                        }`}\n                        onClick={() => setTab(Tab.Mint)}\n                    >\n                        Mint\n                    </div>\n                    <div\n                        className={`tab disabled ${\n                            tab === Tab.Burn ? \"tab--selected\" : \"\"\n                        }`}\n                        // onClick={() => setTab(Tab.Burn)}\n                    >\n                        Burn\n                    </div>\n                </div>\n\n                <div className=\"form-outer\">\n                    {tab === Tab.Mint ? (\n                        <MintForm\n                            // Reset state when the asset is changed.\n                            key={asset}\n                            asset={asset}\n                            web3={wallet}\n                            renJS={renJS}\n                            network={NETWORK}\n                            addDeposit={addDeposit}\n                        />\n                    ) : (\n                        <BurnForm\n                            // Reset state when the asset is changed.\n                            key={asset}\n                            asset={asset}\n                            web3={wallet}\n                            renJS={renJS}\n                            network={NETWORK}\n                            balance={balance}\n                        />\n                    )}\n                </div>\n\n                {errorMessage ? (\n                    <p className=\"box red\">{errorMessage}</p>\n                ) : (\n                    <></>\n                )}\n            </div>\n\n            <div className=\"deposits\">\n                {Array.from(deposits.keys()).map((txHash) => {\n                    const { deposit, status } = deposits.get(txHash)!;\n                    return (\n                        <DepositObject\n                            key={txHash}\n                            txHash={txHash}\n                            deposit={deposit}\n                            status={status}\n                            updateStatus={updateStatus}\n                        />\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n","/**\n *\n *\n *\n * These functions will be abstracted away behind Ren's `multiwallet` library.\n *\n *\n *\n */\n\nimport Web3 from \"web3\";\nimport { Ethereum } from \"@renproject/chains-ethereum\";\nimport { renRinkeby } from \"@renproject/networks\";\nimport { AbiItem, RenNetwork } from \"@renproject/interfaces\";\nimport BigNumber from \"bignumber.js\";\nimport { HttpProvider } from \"web3-providers\";\n\nimport ERC20ABI from \"../lib/ABIs/erc20ABI.json\";\n\nexport type Wallet = Web3;\n\ninterface InjectedEthereum extends HttpProvider {\n    enable: () => Promise<void>;\n}\n\n// tslint:disable-next-line: no-any\ndeclare global {\n    interface Window {\n        ethereum?: InjectedEthereum;\n        web3?: Web3 | undefined;\n    }\n}\n\nconst getWallet = async (isTestnet: boolean): Promise<Wallet> => {\n    if (window.ethereum && window.web3) {\n        await window.ethereum.enable();\n        const wallet = new Web3(window.web3.currentProvider);\n        const networkID = await wallet.eth.net.getId();\n        if (isTestnet && networkID !== 4) {\n            throw new Error(\"Please change your Web3 wallet to Rinkeby\");\n        } else if (!isTestnet && networkID !== 1) {\n            throw new Error(\"Please change your Web3 wallet to Mainnet\");\n        }\n        return wallet;\n    }\n    throw new Error(\"Please use a Web3 browser.\");\n};\n\nconst getBalance = async (wallet: Wallet, token: string): Promise<string> => {\n    const web3Address = (await wallet.eth.getAccounts())[0];\n    const tokenAddress = await Ethereum(\n        wallet.currentProvider,\n        undefined,\n        renRinkeby,\n    )\n        .initialize(RenNetwork.Testnet)\n        .getTokenContractAddress(token);\n    const tokenContract = new wallet.eth.Contract(\n        ERC20ABI as AbiItem[],\n        tokenAddress,\n    );\n    const decimals = await tokenContract.methods.decimals().call();\n    const balance = await tokenContract.methods.balanceOf(web3Address).call();\n    const amount = new BigNumber(balance)\n        .div(\n            new BigNumber(10).exponentiatedBy(\n                new BigNumber(decimals).toNumber(),\n            ),\n        )\n        .toFixed();\n    return amount;\n};\n\nexport const Wallet = {\n    getWallet,\n    getBalance,\n};\n","// tslint:disable: no-console react-this-binding-issue\n\nimport * as React from \"react\";\n\nimport BigNumber from \"bignumber.js\";\nimport Web3 from \"web3\";\nimport RenJS from \"@renproject/ren\";\n\nimport { Assets } from \"./main\";\n\ninterface Props {\n    asset: string;\n    renJS: RenJS;\n    web3: Web3 | null;\n    network: string;\n    balance: string | null;\n}\n\nexport const BurnForm: React.FC<Props> = ({\n    asset,\n    renJS,\n    web3,\n    network,\n    balance,\n}) => {\n    const isTestnet = network === \"testnet\" || network === \"devnet\";\n\n    const [errorMessage, setErrorMessage] = React.useState(\n        null as string | null,\n    );\n\n    const [recipientAddress, setRecipientAddress] = React.useState(\"\");\n    const [amount, setAmount] = React.useState(\"\");\n\n    const isPending = React.useMemo(() => {\n        return !recipientAddress || recipientAddress === \"\";\n    }, [recipientAddress]);\n\n    const onSubmit = React.useCallback(\n        async (event: React.FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n            if (!web3) {\n                setErrorMessage(\"Please use a Web3 browser\");\n                return;\n            }\n            if (!amount) {\n                setErrorMessage(\"Please enter a valid amount.\");\n                return;\n            }\n            if (new BigNumber(amount).lte(0.00005)) {\n                setErrorMessage(\"Amount must be greater than 0.00005\");\n                return;\n            }\n            setErrorMessage(null);\n            try {\n                // TODO\n            } catch (error) {\n                console.error(error);\n                setErrorMessage(\n                    String(\n                        error.message || error.error || JSON.stringify(error),\n                    ),\n                );\n            }\n        },\n        [amount, web3],\n    );\n\n    const burnMaximumValue = React.useCallback(() => {\n        if (balance === null) {\n            return;\n        }\n        setAmount(balance);\n    }, [balance]);\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className=\"send\">\n                <input\n                    value={recipientAddress}\n                    onChange={(e) => {\n                        setRecipientAddress(e.target.value);\n                    }}\n                    placeholder={`Recipient (${isTestnet ? \"Testnet\" : \"\"} ${\n                        (\n                            Assets.get(asset) || {\n                                name: asset.toUpperCase(),\n                            }\n                        ).name\n                    } address)`}\n                />\n            </div>\n            <div className=\"send\">\n                <div className=\"send\">\n                    <input\n                        className={\"no-right-border\"}\n                        value={amount}\n                        onChange={(e) => {\n                            setAmount(e.target.value);\n                        }}\n                        placeholder=\"Amount\"\n                    />\n                    {!isPending ? (\n                        <div\n                            role=\"button\"\n                            className={`box box-action box-blue ${\n                                !balance ? \"disabled\" : \"\"\n                            }`}\n                            onClick={balance ? burnMaximumValue : undefined}\n                        >\n                            max\n                        </div>\n                    ) : (\n                        <></>\n                    )}\n                    <div className=\"box\">{asset.toUpperCase()}</div>\n                </div>\n            </div>\n            <div className=\"send\">\n                <button\n                    type=\"submit\"\n                    className={`blue ${\n                        !amount || /* !validAddress */ false ? \"disabled\" : \"\"\n                    }`}\n                >\n                    Burn\n                </button>\n            </div>\n            {errorMessage ? <p className=\"box red\">{errorMessage}</p> : <></>}\n        </form>\n    );\n};\n","import * as React from \"react\";\n\nimport { LockAndMintDeposit } from \"@renproject/ren/build/main/lockAndMint\";\nimport BigNumber from \"bignumber.js\";\nimport { Loading } from \"@renproject/react-components\";\nimport { TxStatus } from \"@renproject/interfaces\";\n\nimport { DepositStatus, handleDeposit, submitDeposit } from \"../lib/mint\";\n\nexport const ExternalLink: React.FC<React.AnchorHTMLAttributes<\n    HTMLAnchorElement\n>> = ({ children, ...props }) => (\n    <a {...props} target=\"_blank\" rel=\"noopener noreferrer\">\n        {children}\n    </a>\n);\n\ninterface Props {\n    txHash: string;\n    deposit: LockAndMintDeposit;\n    status: DepositStatus;\n    updateStatus: (txHash: string, status: DepositStatus) => void;\n}\n\nexport const DepositObject: React.FC<Props> = ({\n    txHash,\n    deposit,\n    status,\n    updateStatus,\n}) => {\n    const { asset, from, to } = deposit._params;\n    const { amount } = deposit.depositDetails;\n\n    const [errorMessage, setErrorMessage] = React.useState<string | null>(null);\n    const [showingFullError, setShowingFullError] = React.useState(false);\n    const showFullError = React.useCallback(() => setShowingFullError(true), [\n        setShowingFullError,\n    ]);\n\n    const [amountReadable, setAmountReadable] = React.useState<string | null>(\n        null,\n    );\n\n    const onStatus = React.useCallback(\n        (newStatus: DepositStatus) => {\n            updateStatus(txHash, newStatus);\n        },\n        [updateStatus, txHash],\n    );\n\n    // Confirmations\n    const [confirmations, setConfirmations] = React.useState<number | null>(\n        null,\n    );\n    const [targetConfirmations, setTargetConfirmations] = React.useState<\n        number | null\n    >(null);\n    const onConfirmation = React.useCallback(\n        (confs: number, target: number) => {\n            setConfirmations(confs);\n            setTargetConfirmations(target);\n        },\n        [],\n    );\n\n    // The RenVM Status - see the TxStatus type.\n    const [renVMStatus, setRenVMStatus] = React.useState<TxStatus | null>(null);\n\n    const [mintTransaction, setMintTransaction] = React.useState<string | null>(\n        null,\n    );\n\n    const step1 = React.useCallback(() => {\n        onStatus(DepositStatus.DETECTED);\n        handleDeposit(\n            deposit,\n            onStatus,\n            onConfirmation,\n            setRenVMStatus,\n            setMintTransaction,\n        ).catch((error) => {\n            setErrorMessage(String(error.message || error));\n            onStatus(DepositStatus.ERROR);\n        });\n    }, [\n        onConfirmation,\n        setErrorMessage,\n        onStatus,\n        deposit,\n        setRenVMStatus,\n        setMintTransaction,\n    ]);\n\n    React.useEffect(() => {\n        (async () => {\n            step1();\n\n            const decimals = await from.assetDecimals(asset);\n            setAmountReadable(\n                new BigNumber(amount)\n                    .div(new BigNumber(10).exponentiatedBy(decimals))\n                    .toFixed(),\n            );\n        })().catch(console.error);\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const [submitting, setSubmitting] = React.useState(false);\n    const step2 = React.useCallback(async () => {\n        setSubmitting(true);\n        setErrorMessage(null);\n        try {\n            await submitDeposit(deposit, onStatus, setMintTransaction);\n        } catch (error) {\n            setErrorMessage(String(error.message || error));\n        }\n        setSubmitting(false);\n    }, [setSubmitting, deposit, onStatus]);\n\n    return (\n        <div\n            className={`deposit ${status === DepositStatus.DONE ? \"done\" : \"\"}`}\n        >\n            <p>\n                <b>\n                    Received{\" \"}\n                    {amountReadable ? (\n                        amountReadable\n                    ) : (\n                        <Loading style={{ display: \"inline-block\" }} />\n                    )}{\" \"}\n                    {asset}\n                </b>\n            </p>\n            <p>\n                <b>RenVM Hash:</b> {txHash}\n            </p>\n\n            <p>\n                <b>Status:</b>{\" \"}\n                {status === DepositStatus.CONFIRMED ? (\n                    <>\n                        Submitting to RenVM...{\" \"}\n                        <Loading style={{ display: \"inline-block\" }} />\n                    </>\n                ) : (\n                    status\n                )}\n            </p>\n            {deposit.depositDetails.transaction ? (\n                <p>\n                    <b>{from.name} tx:</b>{\" \"}\n                    {from.transactionExplorerLink ? (\n                        <ExternalLink\n                            href={from.transactionExplorerLink(\n                                deposit.depositDetails.transaction,\n                            )}\n                        >\n                            {from.transactionID(\n                                deposit.depositDetails.transaction,\n                            )}\n                        </ExternalLink>\n                    ) : (\n                        deposit.depositDetails.transaction\n                    )}\n                </p>\n            ) : null}\n            {status === DepositStatus.CONFIRMED && renVMStatus ? (\n                <p>\n                    <b>RenVM status:</b> {renVMStatus}\n                </p>\n            ) : null}\n            {status === DepositStatus.DETECTED && confirmations !== null ? (\n                <p>\n                    <b>Confirmations:</b> {confirmations}/{targetConfirmations}\n                </p>\n            ) : null}\n            {status === DepositStatus.SIGNED ? (\n                <button disabled={submitting} onClick={step2} className=\"blue\">\n                    {submitting ? <Loading /> : <>Submit to {to.name}</>}\n                </button>\n            ) : null}\n            {status === DepositStatus.ERROR ? (\n                <button disabled={submitting} onClick={step1} className=\"blue\">\n                    Retry\n                </button>\n            ) : null}\n            {mintTransaction ? (\n                <p>\n                    <b>{to.name} tx:</b>{\" \"}\n                    {to.transactionExplorerLink ? (\n                        <ExternalLink\n                            href={to.transactionExplorerLink(mintTransaction)}\n                        >\n                            {mintTransaction}\n                        </ExternalLink>\n                    ) : (\n                        mintTransaction\n                    )}\n                </p>\n            ) : null}\n            {errorMessage ? (\n                <div className=\"red\" onClick={showFullError}>\n                    {errorMessage.length > 100 && !showingFullError ? (\n                        <>\n                            {errorMessage.slice(0, 74)}...{\" \"}\n                            <span\n                                style={{ color: \"darkgray\", cursor: \"pointer\" }}\n                            >\n                                (click for full error)\n                            </span>\n                        </>\n                    ) : (\n                        errorMessage\n                    )}\n                </div>\n            ) : null}\n        </div>\n    );\n};\n","// tslint:disable: no-console react-this-binding-issue\n\nimport \"./ui/styles/index.scss\";\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { Main } from \"./ui/main\";\n\nconst render = (Main: () => JSX.Element) => {\n    ReactDOM.render(\n        <div className=\"test-background\">{<Main />}</div>,\n        document.getElementById(\"root\") as HTMLElement,\n    );\n};\n\nrender(Main);\n\n// tslint:disable-next-line: no-any\nif ((module as any).hot) {\n    // tslint:disable-next-line: no-any\n    (module as any).hot.accept(\"./ui/main\", () => {\n        const NextMain = require(\"./ui/main\").Main;\n        render(NextMain);\n    });\n}\n","export const errors = {\n    NO_BROWSER_WEB3: \"No Web3 provider exposed by browser.\",\n};\n//# sourceMappingURL=errors.js.map","// tslint:disable: no-any no-console\nimport BigNumber from \"bignumber.js\";\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"Error\"] = \"error\";\n    LogLevel[\"Warn\"] = \"warn\";\n    LogLevel[\"Log\"] = \"log\";\n    LogLevel[\"Info\"] = \"info\";\n    LogLevel[\"Debug\"] = \"debug\";\n    LogLevel[\"Trace\"] = \"trace\";\n})(LogLevel || (LogLevel = {}));\nconst levelValue = (level) => {\n    switch (level) {\n        case LogLevel.Error: return 0;\n        case LogLevel.Warn: return 1;\n        case LogLevel.Log: return 2;\n        case LogLevel.Info: return 3;\n        case LogLevel.Debug: return 4;\n        case LogLevel.Trace: return 5;\n    }\n};\nconst toString = (value) => {\n    try {\n        if (typeof value === \"string\") {\n            return value;\n        }\n        if (BigNumber.isBigNumber(value)) {\n            return value.toFixed();\n        }\n        const seen = [];\n        return JSON.stringify(value, (_key, val) => {\n            if (val !== null && typeof val === \"object\") {\n                if (seen.indexOf(val) >= 0) {\n                    return;\n                }\n                seen.push(val);\n            }\n            return val;\n        }, \"    \");\n    }\n    catch (error) {\n        try {\n            return String(value);\n        }\n        catch (error) {\n            return \"\";\n        }\n    }\n};\n/**\n * SimpleLogger is a implementation of the Logger interface that also supports\n * setting the log level.\n *\n * @export\n * @class SimpleLogger\n */\nexport class SimpleLogger {\n    constructor(level = LogLevel.Warn, logPrefix, debugPrefix) {\n        this.logPrefix = () => \"\";\n        this.debugPrefix = (level) => `[RenJS][${level.toUpperCase()}] `;\n        this.trace = (message, ...optionalParams) => {\n            if (levelValue(this.level) >= levelValue(LogLevel.Trace)) {\n                if (optionalParams.length) {\n                    console.group(this.debugPrefix(LogLevel.Trace) + toString(message));\n                    console.trace(...optionalParams.map(toString));\n                    console.groupEnd();\n                }\n                else {\n                    console.trace(this.debugPrefix(LogLevel.Trace) + toString(message), ...optionalParams.map(toString));\n                }\n            }\n        };\n        this.debug = (message, ...optionalParams) => {\n            if (levelValue(this.level) >= levelValue(LogLevel.Debug)) {\n                if (optionalParams.length) {\n                    console.group(this.debugPrefix(LogLevel.Debug) + toString(message));\n                    console.debug(...optionalParams.map(toString));\n                    console.groupEnd();\n                }\n                else {\n                    console.debug(this.debugPrefix(LogLevel.Debug) + toString(message), ...optionalParams.map(toString));\n                }\n            }\n        };\n        this.info = (message, ...optionalParams) => {\n            if (levelValue(this.level) >= levelValue(LogLevel.Info)) {\n                console.info(this.logPrefix(LogLevel.Debug) + toString(message), ...optionalParams.map(toString));\n            }\n        };\n        this.log = (message, ...optionalParams) => {\n            if (levelValue(this.level) >= levelValue(LogLevel.Log)) {\n                console.log(this.logPrefix(LogLevel.Debug) + toString(message), ...optionalParams.map(toString));\n            }\n        };\n        this.warn = (message, ...optionalParams) => {\n            if (levelValue(this.level) >= levelValue(LogLevel.Warn)) {\n                console.warn(this.logPrefix(LogLevel.Debug) + toString(message), ...optionalParams.map(toString));\n            }\n        };\n        this.error = (message, ...optionalParams) => {\n            if (levelValue(this.level) >= levelValue(LogLevel.Error)) {\n                console.error(this.logPrefix(LogLevel.Debug) + toString(message), ...optionalParams.map(toString));\n            }\n        };\n        this.level = level;\n        if (logPrefix) {\n            const logPrefixFn = typeof logPrefix === \"string\" ? () => logPrefix : logPrefix;\n            this.logPrefix = logPrefixFn;\n            this.debugPrefix = logPrefixFn;\n        }\n        if (debugPrefix) {\n            const debugPrefixFn = typeof debugPrefix === \"string\" ? () => debugPrefix : debugPrefix;\n            this.debugPrefix = debugPrefixFn;\n        }\n    }\n}\n//# sourceMappingURL=logger.js.map","export var RenNetwork;\n(function (RenNetwork) {\n    RenNetwork[\"Mainnet\"] = \"mainnet\";\n    RenNetwork[\"Chaosnet\"] = \"chaosnet\";\n    RenNetwork[\"Testnet\"] = \"testnet\";\n    RenNetwork[\"Devnet\"] = \"devnet\";\n    RenNetwork[\"Localnet\"] = \"localnet\";\n})(RenNetwork || (RenNetwork = {}));\nexport const RenNetworks = [\n    RenNetwork.Mainnet,\n    RenNetwork.Chaosnet,\n    RenNetwork.Testnet,\n    RenNetwork.Devnet,\n    RenNetwork.Localnet,\n];\nexport const isRenNetwork = (\n// tslint:disable-next-line: no-any\nmaybeRenNetwork) => RenNetworks.indexOf(maybeRenNetwork) !== -1; // tslint:disable-line: no-any\nexport const isTestnet = (renNetwork) => renNetwork !== RenNetwork.Mainnet && renNetwork !== RenNetwork.Chaosnet;\n//# sourceMappingURL=networks.js.map","// Modified from web3-core-method\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file PromiEvent.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>, Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n// tslint:disable: no-any\nimport { EventEmitter } from \"events\";\nexport class InternalPromiEvent {\n    /**\n     * @constructor\n     */\n    constructor() {\n        // tslint:disable-next-line: promise-must-complete\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        this._cancelled = false;\n        this.eventEmitter = new EventEmitter();\n        return new Proxy(this, {\n            get: this.proxyHandler,\n        });\n    }\n    /**\n     * Proxy handler to call the promise or eventEmitter methods\n     */\n    proxyHandler(target, name) {\n        if (name === \"resolve\" || name === \"reject\") {\n            return target[name];\n        }\n        if (name === \"then\") {\n            return target.promise.then.bind(target.promise);\n        }\n        if (name === \"catch\") {\n            return target.promise.catch.bind(target.promise);\n        }\n        if (name === \"_cancel\") {\n            // tslint:disable-next-line: no-object-mutation\n            return () => {\n                this._cancelled = true;\n            };\n        }\n        if (name === \"_isCancelled\") {\n            // tslint:disable-next-line: no-object-mutation\n            return () => this._cancelled === true;\n        }\n        // tslint:disable-next-line: no-if-statement\n        if (target.eventEmitter[name]) {\n            return target.eventEmitter[name];\n        }\n    }\n}\nexport const newPromiEvent = () => new InternalPromiEvent();\n//# sourceMappingURL=promiEvent.js.map","export var LockAndMintStatus;\n(function (LockAndMintStatus) {\n    LockAndMintStatus[\"Committed\"] = \"mint_committed\";\n    LockAndMintStatus[\"Deposited\"] = \"mint_deposited\";\n    LockAndMintStatus[\"Confirmed\"] = \"mint_confirmed\";\n    LockAndMintStatus[\"SubmittedToRenVM\"] = \"mint_submittedToRenVM\";\n    LockAndMintStatus[\"ReturnedFromRenVM\"] = \"mint_returnedFromRenVM\";\n    LockAndMintStatus[\"SubmittedToLockChain\"] = \"mint_submittedToLockChain\";\n    LockAndMintStatus[\"ConfirmedOnLockChain\"] = \"mint_confirmedOnLockChain\";\n    // Backwards compatibility\n    LockAndMintStatus[\"SubmittedToEthereum\"] = \"mint_submittedToEthereum\";\n    LockAndMintStatus[\"ConfirmedOnEthereum\"] = \"mint_confirmedOnEthereum\";\n})(LockAndMintStatus || (LockAndMintStatus = {}));\nexport var BurnAndReleaseStatus;\n(function (BurnAndReleaseStatus) {\n    BurnAndReleaseStatus[\"Committed\"] = \"burn_committed\";\n    BurnAndReleaseStatus[\"SubmittedToLockChain\"] = \"burn_submittedToLockChain\";\n    BurnAndReleaseStatus[\"ConfirmedOnLockChain\"] = \"burn_confirmedOnLockChain\";\n    BurnAndReleaseStatus[\"SubmittedToRenVM\"] = \"burn_submittedToRenVM\";\n    BurnAndReleaseStatus[\"ReturnedFromRenVM\"] = \"burn_returnedFromRenVM\";\n    BurnAndReleaseStatus[\"NoBurnFound\"] = \"burn_noBurnFound\";\n    // Backwards compatibility\n    BurnAndReleaseStatus[\"SubmittedToEthereum\"] = \"burn_submittedToEthereum\";\n    BurnAndReleaseStatus[\"ConfirmedOnEthereum\"] = \"burn_confirmedOnEthereum\";\n})(BurnAndReleaseStatus || (BurnAndReleaseStatus = {}));\nexport var TxStatus;\n(function (TxStatus) {\n    // TxStatusNil is used for transactions that have not been seen, or are\n    // otherwise unknown.\n    TxStatus[\"TxStatusNil\"] = \"nil\";\n    // TxStatusConfirming is used for transactions that are currently waiting\n    // for their underlying blockchain transactions to ne confirmed.\n    TxStatus[\"TxStatusConfirming\"] = \"confirming\";\n    // TxStatusPending is used for transactions that are waiting for consensus\n    // to be reached on when the transaction should be executed.\n    TxStatus[\"TxStatusPending\"] = \"pending\";\n    // TxStatusExecuting is used for transactions that are currently being\n    // executed.\n    TxStatus[\"TxStatusExecuting\"] = \"executing\";\n    // TxStatusDone is used for transactions that have been successfully\n    // executed.\n    TxStatus[\"TxStatusDone\"] = \"done\";\n    // TxStatusReverted is used for transactions that were reverted during\n    // execution.\n    TxStatus[\"TxStatusReverted\"] = \"reverted\";\n})(TxStatus || (TxStatus = {}));\nexport var EventType;\n(function (EventType) {\n    EventType[\"LockAndMint\"] = \"lockAndMint\";\n    EventType[\"BurnAndRelease\"] = \"burnAndRelease\";\n})(EventType || (EventType = {}));\n//# sourceMappingURL=types.js.map","// tslint:disable: no-any only-arrow-functions\n// export const Callable = <TConstructor extends Constructor>(t: TConstructor) =>\n//     t as CallableConstructor<TConstructor>;\nexport function Callable(type) {\n    function createInstance(...args) {\n        return new type(...args);\n    }\n    createInstance.prototype = type.prototype;\n    return createInstance;\n}\n//# sourceMappingURL=callableClass.js.map","/**\n * The `value` function converts between different cryptocurrency units.\n * See `value.spec.ts` for example usage.\n */\nimport BigNumber from \"bignumber.js\";\nconst convert = (valueIn, fromUnit, toUnit) => {\n    return valueIn.multipliedBy(fromUnit).dividedBy(toUnit);\n};\nexport const toBigNumber = (valueIn) => BigNumber.isBigNumber(valueIn)\n    ? new BigNumber(valueIn)\n    : new BigNumber(valueIn.toString());\nexport const toFixed = (input) => (input.toFixed ? input.toFixed() : input.toString());\nclass BaseValue {\n    constructor(unitTypes, valueIn, unit) {\n        this.to = (unit) => convert(this.value, new BigNumber(\"1\"), \n        // tslint:disable-next-line: no-use-before-declare\n        this.unitTypes[resolveUnit(unit)]);\n        this.unitTypes = unitTypes;\n        this.value = convert(toBigNumber(valueIn), this.unitTypes[unit], new BigNumber(\"1\"));\n    }\n}\n// BTC /////////////////////////////////////////////////////////////////////////\nconst BTCUnits = {\n    sats: new BigNumber(\"0.00000001\"),\n    ubtc: new BigNumber(\"0.000001\"),\n    mbtc: new BigNumber(\"0.001\"),\n    btc: new BigNumber(\"1\"),\n};\nclass BTCValue extends BaseValue {\n    constructor(valueIn, unit) {\n        super(BTCUnits, valueIn, unit);\n        this.sats = () => this.to(\"sats\");\n        this.btc = () => this.to(\"btc\");\n        this._smallest = () => this.to(\"sats\");\n        this._readable = () => this.to(\"btc\");\n    }\n}\nBTCValue.units = BTCUnits;\nBTCValue.synonyms = [\n    { synonyms: [\"bitcoin\", \"bitcoins\", \"tbtc\"], unit: \"btc\" },\n]; // tbtc is used to indicate testnet btc\n// BCH /////////////////////////////////////////////////////////////////////////\nconst BCHUnits = {\n    sats: new BigNumber(\"0.00000001\"),\n    ubch: new BigNumber(\"0.000001\"),\n    mbch: new BigNumber(\"0.001\"),\n    bch: new BigNumber(\"1\"),\n};\nclass BCHValue extends BaseValue {\n    constructor(valueIn, unit) {\n        super(BCHUnits, valueIn, unit);\n        this.sats = () => this.to(\"sats\");\n        this.bch = () => this.to(\"bch\");\n        this._smallest = () => this.to(\"sats\");\n        this._readable = () => this.to(\"bch\");\n    }\n}\nBCHValue.units = BCHUnits;\nBCHValue.synonyms = [\n    { synonyms: [\"bitcoin-cash\", \"bcash\", \"tbch\"], unit: \"btc\" },\n];\n// ZEC /////////////////////////////////////////////////////////////////////////\nconst ZECUnits = {\n    zats: new BigNumber(\"0.00000001\"),\n    uzec: new BigNumber(\"0.000001\"),\n    mzec: new BigNumber(\"0.001\"),\n    zec: new BigNumber(\"1\"),\n};\nclass ZECValue extends BaseValue {\n    constructor(valueIn, unit) {\n        super(ZECUnits, valueIn, unit);\n        this.zats = () => this.to(\"zats\");\n        this.zec = () => this.to(\"zec\");\n        this._smallest = () => this.to(\"zats\");\n        this._readable = () => this.to(\"zec\");\n    }\n}\nZECValue.units = ZECUnits;\nZECValue.synonyms = [\n    { synonyms: [\"zcash\", \"tzec\", \"taz\"], unit: \"zec\" },\n];\n// Sats ////////////////////////////////////////////////////////////////////////\nconst SatsUnits = {\n    sats: new BigNumber(\"0.00000001\"),\n    bch: new BigNumber(\"1\"),\n    btc: new BigNumber(\"1\"),\n};\nclass SatsValue extends BaseValue {\n    constructor(valueIn, unit) {\n        super(SatsUnits, valueIn, unit);\n        this.sats = () => this.to(\"sats\");\n        this.btc = () => this.to(\"btc\");\n        this.bch = () => this.to(\"bch\");\n        this._smallest = () => this.to(\"sats\");\n        this._readable = () => this.to(\"btc\");\n    }\n}\nSatsValue.units = SatsUnits;\nSatsValue.synonyms = [{}];\n// ETH /////////////////////////////////////////////////////////////////////////\nconst ETHUnits = {\n    wei: new BigNumber(\"0.000000000000000001\"),\n    kwei: new BigNumber(\"0.000000000000001\"),\n    mwei: new BigNumber(\"0.000000000001\"),\n    gwei: new BigNumber(\"0.000000001\"),\n    finney: new BigNumber(\"0.001\"),\n    eth: new BigNumber(\"1\"),\n};\nclass ETHValue extends BaseValue {\n    constructor(valueIn, unit) {\n        super(ETHUnits, valueIn, unit);\n        this.wei = () => this.to(\"wei\");\n        this.eth = () => this.to(\"eth\");\n        this._smallest = () => this.to(\"wei\");\n        this._readable = () => this.to(\"eth\");\n    }\n}\nETHValue.units = ETHUnits;\nETHValue.synonyms = [\n    { synonyms: [\"ethereum\", \"ether\", \"keth\"], unit: \"eth\" },\n];\n////////////////////////////////////////////////////////////////////////////////\n// General /////////////////////////////////////////////////////////////////////\n////////////////////////////////////////////////////////////////////////////////\nconst valueClasses = [BTCValue, BCHValue, ZECValue, ETHValue];\nconst resolveUnit = (unitIn) => {\n    const unit = unitIn.toLowerCase().replace(/µ/, \"u\");\n    // Satoshis\n    if (unit.slice(0, 3) === \"sat\") {\n        return \"sats\";\n    }\n    for (const ValueClass of valueClasses) {\n        // Check if the unit belongs to the class\n        if (new Set(Object.keys(ValueClass.units)).has(unit)) {\n            return unit;\n        }\n        // Handle synonyms\n        for (const { synonyms, unit: synonymUnit } of ValueClass.synonyms) {\n            if (new Set(synonyms).has(unit)) {\n                return synonymUnit;\n            }\n        }\n    }\n    throw new Error(`Unknown unit \"${unitIn}\"`);\n};\nexport const value = (valueIn, unitIn) => {\n    const unit = resolveUnit(unitIn);\n    // Satoshis\n    if (unit === \"sats\") {\n        return new SatsValue(valueIn, \"sats\");\n    }\n    for (const ValueClass of valueClasses) {\n        // Check if the unit belongs to the class\n        if (new Set(Object.keys(ValueClass.units)).has(unit)) {\n            return new ValueClass(valueIn, unit);\n        }\n    }\n    throw new Error(`Unknown unit \"${unitIn}\"`);\n};\n//# sourceMappingURL=value.js.map","import { AbiCoder } from \"web3-eth-abi\";\nimport { assertType } from \"./assert\";\n/**\n * Represents 1 second for functions that accept a parameter in milliseconds.\n */\nexport const SECONDS = 1000;\n/**\n * Pauses the thread for the specified number of milliseconds.\n * @param ms The number of milliseconds to pause for.\n */\nexport const sleep = async (ms) => \n// tslint:disable-next-line: no-string-based-set-timeout\nnew Promise(resolve => setTimeout(resolve, ms));\n/**\n * Remove 0x prefix from a hex string. If the input doesn't have a 0x prefix,\n * it's returned unchanged.\n * @param hex The hex value to be prefixed.\n */\nexport const strip0x = (hex) => {\n    // Type validation\n    assertType(\"string\", { hex });\n    return hex.substring(0, 2) === \"0x\" ? hex.slice(2) : hex;\n};\n/**\n * Add a 0x prefix to a hex value, converting to a string first. If the input\n * is already prefixed, it's returned unchanged.\n * @param hex The hex value to be prefixed.\n */\nexport const Ox = (hex, { prefix } = { prefix: \"0x\" }) => {\n    const hexString = typeof hex === \"string\" ? hex : hex.toString(\"hex\");\n    return hexString.substring(0, 2) === prefix\n        ? hexString\n        : `${prefix}${hexString}`;\n};\nexport const fromHex = (hex) => {\n    assertType(\"Buffer | string\", { hex });\n    return Buffer.isBuffer(hex) ? hex : Buffer.from(strip0x(hex), \"hex\");\n};\nexport const fromBase64 = (base64) => {\n    assertType(\"Buffer | string\", {\n        base64,\n    });\n    return Buffer.isBuffer(base64)\n        ? base64\n        : Buffer.from(strip0x(base64), \"base64\");\n};\nexport const toBase64 = (input) => {\n    assertType(\"Buffer\", { input });\n    return input.toString(\"base64\");\n};\nexport const fromBigNumber = (bn) => {\n    const bnStr = bn.toString(16);\n    // Pad if necessary\n    return Buffer.from(bnStr.length % 2 ? \"0\" + bnStr : bnStr, \"hex\");\n};\n// Unpadded alternate base64 encoding defined in RFC 4648, commonly used in\n// URLs.\nexport const toURLBase64 = (input) => {\n    assertType(\"Buffer | string\", {\n        input,\n    });\n    return (Buffer.isBuffer(input) ? input : fromHex(input))\n        .toString(\"base64\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/\\=+$/, \"\");\n};\n// tslint:disable-next-line: no-any\nexport const extractError = (error) => {\n    if (error && typeof error === \"object\") {\n        if (error.response) {\n            return extractError(error.response);\n        }\n        if (error.data) {\n            return extractError(error.data);\n        }\n        if (error.error) {\n            return extractError(error.error);\n        }\n        if (error.context) {\n            return extractError(error.context);\n        }\n        if (error.message) {\n            return extractError(error.message);\n        }\n        if (error.statusText) {\n            return extractError(error.statusText);\n        }\n    }\n    try {\n        if (typeof error === \"string\") {\n            if (error.slice(0, 7) === \"Error: \") {\n                error = error.slice(7);\n            }\n            return error;\n        }\n        return JSON.stringify(error);\n    }\n    catch (error) {\n        // Ignore JSON error\n    }\n    return String(error);\n};\nexport const retryNTimes = async (fnCall, retries) => {\n    let returnError;\n    for (let i = 0; retries === -1 || i < retries; i++) {\n        try {\n            return await fnCall();\n        }\n        catch (error) {\n            // Fix error message.\n            const errorMessage = extractError(error);\n            // If error.message is undefined, set it to the extracted error.\n            error.message = error.message || errorMessage;\n            if (errorMessage && errorMessage !== error.message) {\n                error.message += ` (${errorMessage})`;\n            }\n            returnError = error;\n        }\n    }\n    throw returnError;\n};\n/**\n * Generates a random hex string (prefixed with '0x').\n * @param bytes The number of bytes to generate.\n */\nexport const randomBytes = (bytes) => {\n    try {\n        // @ts-ignore\n        if (window) {\n            const uints = new Uint32Array(bytes / 4); // 4 bytes (32 bits)\n            // @ts-ignore\n            window.crypto.getRandomValues(uints);\n            let str = \"\";\n            for (const uint of uints) {\n                str +=\n                    \"0\".repeat(8 - uint.toString(16).length) +\n                        uint.toString(16);\n            }\n            return fromHex(str);\n        }\n    }\n    catch (error) {\n        // Ignore error\n    }\n    // tslint:disable-next-line: no-shadowed-variable\n    const crypto = require(\"crypto\");\n    return crypto.randomBytes(bytes);\n};\n/**\n * Returns a random 32 byte Buffer.\n */\nexport const randomNonce = () => randomBytes(32);\nexport const rawEncode = (types, \n// tslint:disable-next-line:no-any\nparameters) => fromHex(new AbiCoder().encodeParameters(types, parameters));\n//# sourceMappingURL=common.js.map","import { assertType } from \"./assert\";\nimport { fromHex, Ox, rawEncode, toBase64 } from \"./common\";\nimport { keccak256 } from \"./hash\";\n// export const generateNHash = (tx: Tx): Buffer => {\n//     const encoded = rawEncode(\n//         [\"bytes32\", \"bytes32\"],\n//         [Ox(tx.hash), Ox(tx.args.n)],\n//     );\n//     return keccak256(encoded);\n// };\n/**\n * Hash the payloads associated with a RenVM cross-chain transaction.\n *\n * @param zip An array (or spread) of parameters with with types defined.\n */\nexport const generatePHash = (zip, logger) => {\n    // Check if they called as hashPayload([...]) instead of hashPayload(...)\n    const args = Array.isArray(zip[0]) ? zip[0] : zip; // tslint:disable-line: no-any\n    const types = args.map(param => param.type);\n    const values = args.map(param => param.value);\n    const message = rawEncode(types, values);\n    const digest = keccak256(message);\n    if (logger)\n        logger.debug(\"pHash\", toBase64(digest), Ox(message));\n    return digest; // sha3 can accept a Buffer\n};\nexport const generateSHash = (selector) => {\n    const toSelector = selector.replace(/\\/.*To/, \"/to\");\n    return keccak256(Buffer.from(toSelector));\n};\nexport const generateGHash = (payload, to, tokenIdentifier, nonce, v2, logger) => {\n    // Type validation\n    assertType(\"Buffer\", { nonce });\n    assertType(\"string\", { to, token: tokenIdentifier });\n    const pHash = generatePHash(payload, logger);\n    const encoded = v2\n        ? Buffer.concat([pHash, fromHex(tokenIdentifier), fromHex(to), nonce])\n        : rawEncode([\"bytes32\", \"address\", \"address\", \"bytes32\"], [pHash, tokenIdentifier, to, nonce]);\n    const digest = keccak256(encoded);\n    if (logger) {\n        logger.debug(\"gHash\", toBase64(digest), Ox(encoded));\n    }\n    return digest;\n};\nexport const generateNHash = (nonce, txid, txindex, v2, logger) => {\n    const encoded = v2\n        ? Buffer.concat([\n            nonce,\n            txid,\n            rawEncode([\"uint32\"], [txindex]).slice(-4),\n        ])\n        : rawEncode([\"bytes32\", \"bytes32\", \"uint32\"], [nonce, txid, txindex]);\n    const digest = keccak256(encoded);\n    if (logger) {\n        logger.debug(\"nHash\", toBase64(digest), Ox(encoded));\n    }\n    return digest;\n};\nexport const generateSighash = (pHash, amount, to, tokenIdentifier, nonceHash, v2, logger) => {\n    // Type validation\n    assertType(\"string\", { to, tokenIdentifier });\n    assertType(\"Buffer\", { pHash, nonceHash });\n    const encoded = rawEncode([\n        \"bytes32\",\n        \"uint256\",\n        v2 ? \"string\" : \"address\",\n        v2 ? \"string\" : \"address\",\n        \"bytes32\",\n    ], [pHash, amount, Ox(tokenIdentifier), Ox(to), nonceHash]);\n    const digest = keccak256(encoded);\n    if (logger)\n        logger.debug(\"sigHash\", toBase64(digest), Ox(encoded));\n    return digest;\n};\nexport const renVMHashToBase64 = (txHash) => {\n    // Type validation\n    assertType(\"string\", { txHash });\n    // Hex\n    if (txHash.match(/^(0x)?[0-9a-fA-Z]{64}$/)) {\n        return toBase64(fromHex(txHash));\n    }\n    // Already base64\n    return txHash;\n};\nexport const generateBurnTxHash = (renContract, encodedID, logger) => {\n    // Type validation\n    assertType(\"string\", { encodedID });\n    const message = `txHash_${renContract}_${encodedID}`;\n    const digest = keccak256(Buffer.from(message));\n    if (logger)\n        logger.debug(\"Burn txHash\", toBase64(digest), message);\n    return digest;\n};\n//# sourceMappingURL=renVMHashes.js.map","// tslint:disable: no-any no-use-before-declare\nimport BigNumber from \"bignumber.js\";\nexport const assert = (assertion, sentence) => {\n    if (!assertion) {\n        throw new Error(`Failed assertion${sentence ? `: ${sentence}` : \"\"}`);\n    }\n    return true;\n};\n/**\n * The following is a set of rudimentary type validation functions.\n *\n * The main function is `assertType`, which accepts a type and a dictionary of\n * values.\n *\n * The type must be a string that matches the following pattern:\n *\n * ```\n * TYPE:\n *   | TYPE '|' TYPE\n *   | Array<TYPE>\n *   | TYPE[]\n *   | PRIMITIVE_TYPE\n *\n * PRIMITIVE_TYPE:\n *   | \"string\"\n *   | \"number\"\n *   | \"bigint\"\n *   | \"boolean\"\n *   | \"symbol\"\n *   | \"undefined\"\n *   | \"object\"\n *   | \"function\"\n *   | \"null\"\n *   | \"any\"\n *   | \"Buffer\"\n *   | \"BigNumber\"\n * ```\n *\n * Types are matched by a regex so '|' can't be used at multiple levels, e.g.\n * `string | Array<string | number>`.\n */\nexport const assertType = (type, objects) => {\n    if (isArrayType(type)) {\n        return assertArray(type, objects);\n    }\n    if (isUnionType(type)) {\n        return assertTypeUnion(type, objects);\n    }\n    return assertTypeCheck(is(type), objects, type);\n};\nconst typeOf = (v) => v === null\n    ? \"null\"\n    : BigNumber.isBigNumber(v)\n        ? \"BigNumber\"\n        : Buffer.isBuffer(v)\n            ? \"Buffer\"\n            : typeof v;\nconst assertTypeCheck = (type, objects, typeDescription) => {\n    for (const key of Object.keys(objects)) {\n        const value = objects[key];\n        if (!type(value, key)) {\n            const readableType = Array.isArray(value) ? \"any[]\" : typeOf(value);\n            throw new Error(`Expected ${key} to be of type '${typeDescription}', instead got '${readableType}'.`);\n        }\n    }\n    return true;\n};\nconst is = (type) => (v) => type === \"any\" ? true : typeOf(v) === type;\nconst isUnionType = (unionType) => {\n    const types = unionType.split(\" | \");\n    return types.length > 1 ? types : false;\n};\nconst isArrayType = (arrayType) => {\n    // Check with simple string operations to avoid running slow RegExs if there\n    // isn't a match.\n    const isArray = arrayType.slice(0, 6) === \"Array<\" && arrayType.slice(-1) === \">\";\n    if (isArray) {\n        const arrayMatch = arrayType.match(/^Array<(.*)>$/);\n        if (arrayMatch) {\n            let type;\n            [, type] = arrayMatch;\n            return type;\n        }\n    }\n    const isBracketArray = arrayType.indexOf(\" \") === -1 && arrayType.slice(-2) === \"[]\";\n    if (isBracketArray) {\n        const bracketMatch = arrayType.match(/^([^ ]*)\\[\\]$/);\n        if (bracketMatch) {\n            let type;\n            [, type] = bracketMatch;\n            return type;\n        }\n    }\n    return false;\n};\nconst assertTypeUnion = (unionType, objects) => {\n    const types = unionType.split(\" | \");\n    return assertTypeCheck((v, key) => types.reduce((acc, type) => {\n        if (acc) {\n            return acc;\n        }\n        if (isArrayType(type)) {\n            try {\n                assertArray(type, { [key]: v });\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        }\n        return is(type)(v);\n    }, false), objects, unionType);\n};\nconst assertArray = (arrayType, objects) => {\n    const type = isArrayType(arrayType);\n    if (!type) {\n        throw new Error(`Invalid array type ${arrayType}`);\n    }\n    for (const key of Object.keys(objects)) {\n        const value = objects[key];\n        assertTypeCheck((v) => Array.isArray(v), { value }, \"any[]\");\n        for (let i = 0; i < value.length; i++) {\n            assertType(type, { [`${key}[${i}]`]: value[i] });\n        }\n    }\n    return true;\n};\nexport const assertObject = (fieldTypes, objects) => {\n    for (const key of Object.keys(objects)) {\n        const value = objects[key];\n        for (const field of Object.keys(fieldTypes)) {\n            if (typeof fieldTypes[field] === \"object\") {\n                assertObject(fieldTypes[field], {\n                    [`${key}[\"${field}\"]`]: value[field],\n                });\n            }\n            else if (typeof fieldTypes[field] === \"string\") {\n                assertType(fieldTypes[field], {\n                    [`${key}[\"${field}\"]`]: value[field],\n                });\n            }\n            else {\n                throw new Error(`Invalid object type definition ${typeof fieldTypes[field]}`);\n            }\n        }\n    }\n    return true;\n};\n//# sourceMappingURL=assert.js.map","import Axios from \"axios\";\n// See https://github.com/renproject/account-chain-indexer\nconst INDEXER_URL = `https://account-chain-indexer.herokuapp.com/graphql`;\nexport const fetchDeposits = async (address, paramsFilterBase64 = undefined, _page = 0) => {\n    // TODO: Add network parameter.\n    const query = `{\n        messages: FilecoinTransactions(to: \"${address}\", params: \"${paramsFilterBase64}\") {\n            cid\n            params\n            to\n            nonce\n            blocknumber\n            amount\n        }\n\n        height: NetworkHeight(chain: \"Filecoin\", network: \"testnet\")\n    }`;\n    const response = (await Axios.post(INDEXER_URL, { query })).data;\n    if (response.errors && response.errors.length) {\n        throw new Error(`Unable to fetch Filecoin messages: ${response.errors[0].message}`);\n    }\n    const { messages, height } = response.data;\n    return messages\n        .map((message) => {\n        return {\n            cid: message.cid,\n            // to: message.to,\n            amount: message.amount,\n            params: message.params,\n            confirmations: height ? height - height + 1 : 0,\n            nonce: message.nonce,\n        };\n    })\n        .filter(message => !paramsFilterBase64 || message.params === paramsFilterBase64);\n};\nexport const fetchMessage = async (cid) => {\n    // TODO: Add network parameter.\n    const query = `{\n        messages: FilecoinTransactions(cid: \"${cid}\") {\n            cid\n            params\n            to\n            nonce\n            blocknumber\n            amount\n        }\n\n        height: NetworkHeight(chain: \"Filecoin\", network: \"testnet\")\n    }`;\n    const response = (await Axios.post(INDEXER_URL, { query })).data;\n    if (response.errors && response.errors.length) {\n        throw new Error(`Unable to fetch Filecoin messages: ${response.errors[0].message}`);\n    }\n    const { messages, height } = response.data;\n    if (messages.length === 0) {\n        throw new Error(`Error fetching Filecoin transaction: message not found.`);\n    }\n    if (messages.length > 0) {\n        console.warn(`More than Filecoin transaction found with the same transaction ID.`);\n    }\n    const message = messages[0];\n    return {\n        cid: message.cid,\n        // to: message.to,\n        amount: message.amount,\n        params: message.params,\n        confirmations: message.blocknumber\n            ? height - message.blocknumber + 1\n            : 0,\n        nonce: message.nonce,\n    };\n};\n//# sourceMappingURL=indexer.js.map","// tslint:disable: no-console\n\n// The following are also available from a combined \"@renproject/chains\" package.\nimport { Filecoin } from \"@renproject/chains-filecoin\";\nimport { Ethereum } from \"@renproject/chains-ethereum\";\nimport { Bitcoin } from \"@renproject/chains-bitcoin\";\nimport {\n    LockChain,\n    LogLevel,\n    SimpleLogger,\n    TxStatus,\n} from \"@renproject/interfaces\";\nimport { renRinkeby } from \"@renproject/networks\";\nimport {\n    HttpProvider,\n    OverwriteProvider,\n    Provider,\n} from \"@renproject/provider\";\nimport RenJS from \"@renproject/ren\";\nimport { LockAndMintDeposit } from \"@renproject/ren/build/main/lockAndMint\";\nimport { AbstractRenVMProvider } from \"@renproject/rpc\";\nimport {\n    RenVMParams,\n    RenVMProvider,\n    RenVMProviderInterface,\n    RenVMResponses,\n} from \"@renproject/rpc/build/main/v2\";\nimport { Ox, sleep } from \"@renproject/utils\";\nimport Web3 from \"web3\";\n\nconst logLevel = LogLevel.Log;\n\n// Override RenJS's provider with staging darknode network.\nexport const stagingRenJS = () => {\n    const httpProvider = new HttpProvider<RenVMParams, RenVMResponses>(\n        \"https://lightnode-new-testnet.herokuapp.com/\",\n        // \"http://34.239.188.210:18515\", // tslint:disable-line: no-http-string\n    ) as Provider<RenVMParams, RenVMResponses>;\n    const rpcProvider = new OverwriteProvider<RenVMParams, RenVMResponses>(\n        httpProvider,\n    ) as RenVMProviderInterface;\n    const renVMProvider = new RenVMProvider(\n        \"testnet\",\n        rpcProvider,\n    ) as AbstractRenVMProvider;\n\n    return new RenJS(renVMProvider, { logLevel });\n};\n\nexport const startMint = async (\n    web3: Web3,\n    renJS: RenJS,\n    recipientAddress: string,\n    showAddress: (\n        address: string | { address: string; params?: string },\n    ) => void,\n    asset: string,\n    onDeposit: (txHash: string, deposit: LockAndMintDeposit) => void,\n) => {\n    let from: LockChain;\n    switch (asset) {\n        case \"FIL\":\n            // TODO: Fix typing issues.\n            from = (Filecoin() as unknown) as LockChain;\n            break;\n        case \"BTC\":\n            from = (Bitcoin() as unknown) as LockChain;\n            break;\n        default:\n            throw new Error(`Unsupported asset ${asset}.`);\n    }\n    const to = Ethereum(web3.currentProvider, undefined, renRinkeby);\n\n    const lockAndMint = await renJS.lockAndMint({\n        asset,\n        from,\n        to: to.Account({\n            address: recipientAddress,\n        }),\n\n        nonce: Ox(\"00\".repeat(32)),\n    });\n\n    if (lockAndMint.gatewayAddress) {\n        showAddress(lockAndMint.gatewayAddress);\n    }\n\n    lockAndMint.on(\"deposit\", async (deposit) => {\n        const txHash = await deposit.txHash();\n        // TODO: Ensure deposit types don't have to be typecast.\n        onDeposit(txHash, (deposit as unknown) as LockAndMintDeposit);\n    });\n};\n\nexport enum DepositStatus {\n    DETECTED = \"Detected\",\n    CONFIRMED = \"Confirmed\",\n    SIGNED = \"Signed\",\n    DONE = \"Done\",\n    ERROR = \"Error\",\n}\n\nexport const handleDeposit = async (\n    deposit: LockAndMintDeposit,\n    onStatus: (status: DepositStatus) => void,\n    onConfirmation: (confs: number, target: number) => void,\n    onRenVMStatus: (status: TxStatus) => void,\n    onTransactionHash: (txHash: string) => void,\n) => {\n    const hash = await deposit.txHash();\n\n    deposit._logger = new SimpleLogger(logLevel, `[${hash.slice(0, 6)}] `);\n\n    await deposit\n        .confirmed()\n        .on(\"target\", onConfirmation)\n        .on(\"confirmation\", onConfirmation);\n\n    onStatus(DepositStatus.CONFIRMED);\n\n    let retries = 1;\n    let lastError;\n    while (retries) {\n        try {\n            await deposit.signed().on(\"status\", onRenVMStatus);\n            break;\n        } catch (error) {\n            console.error(error);\n            lastError = error;\n        }\n        retries--;\n        if (retries) {\n            await sleep(10);\n        }\n    }\n    if (retries === 0) {\n        throw new Error(lastError);\n    }\n\n    const mintTransaction = await deposit.findTransaction();\n    if (mintTransaction) {\n        onTransactionHash(mintTransaction as string);\n        onStatus(DepositStatus.DONE);\n        return;\n    }\n\n    onStatus(DepositStatus.SIGNED);\n};\n\nexport const submitDeposit = async (\n    deposit: LockAndMintDeposit,\n    onStatus: (status: DepositStatus) => void,\n    onTransactionHash: (txHash: string) => void,\n) => {\n    await deposit.mint().on(\"transactionHash\", onTransactionHash);\n\n    onStatus(DepositStatus.DONE);\n};\n","import { encode as encodeAddress, validateAddressString, } from \"@glif/filecoin-address\";\nimport { RenNetwork } from \"@renproject/interfaces\";\nimport { assertType, Callable, toBase64, toURLBase64, } from \"@renproject/utils\";\nimport { blake2b } from \"blakejs\";\nimport CID from \"cids\";\nimport elliptic from \"elliptic\";\nimport { fetchDeposits, fetchMessage } from \"./api/indexer\";\nconst NETWORK_NOT_SUPPORTED = `Filecoin is not supported by the current RenVM network.`;\nconst resolveFilecoinNetwork = (renNetwork) => {\n    switch (renNetwork) {\n        case RenNetwork.Mainnet:\n        case RenNetwork.Chaosnet:\n            return \"mainnet\";\n        case RenNetwork.Testnet:\n        case RenNetwork.Devnet:\n        case RenNetwork.Localnet:\n            return \"testnet\";\n    }\n    throw new Error(`Unrecognized network ${renNetwork}`);\n};\nconst transactionToDeposit = (transaction) => ({\n    transaction,\n    amount: transaction.amount,\n});\nexport class FilecoinClass {\n    constructor(network) {\n        this.name = \"Filecoin\";\n        this._asset = \"FIL\";\n        this._addressIsValid = (address, _network) => validateAddressString(address.address);\n        /**\n         * See [[OriginChain.initialize]].\n         */\n        this.initialize = (renNetwork) => {\n            this.renNetwork = renNetwork;\n            // Prioritize the network passed in to the constructor.\n            this.chainNetwork =\n                this.chainNetwork || resolveFilecoinNetwork(renNetwork);\n            return this;\n        };\n        /**\n         * See [[OriginChain.assetIsNative]].\n         */\n        this.assetIsNative = (asset) => asset === this._asset;\n        this.assetAssetSupported = (asset) => {\n            if (!this.assetIsNative(asset)) {\n                throw new Error(`Unsupported asset ${asset}`);\n            }\n        };\n        /**\n         * See [[OriginChain.assetDecimals]].\n         */\n        this.assetDecimals = (asset) => {\n            if (asset === this._asset) {\n                return 18;\n            }\n            throw new Error(`Unsupported asset ${asset}`);\n        };\n        /**\n         * See [[OriginChain.getDeposits]].\n         */\n        this.getDeposits = async (asset, address) => {\n            if (!this.chainNetwork) {\n                throw new Error(`${name} object not initialized`);\n            }\n            if (this.chainNetwork === \"devnet\") {\n                throw new Error(`Unable to fetch deposits on ${this.chainNetwork}`);\n            }\n            this.assetAssetSupported(asset);\n            return (await fetchDeposits(address.address, address.params)).map(transactionToDeposit);\n            // .filter((utxo) => utxo.amount > 70000);\n        };\n        /**\n         * See [[OriginChain.transactionConfidence]].\n         */\n        this.transactionConfidence = async (transaction) => {\n            if (!this.chainNetwork) {\n                throw new Error(`${name} object not initialized`);\n            }\n            transaction = await fetchMessage(transaction.cid);\n            return {\n                current: transaction.confirmations,\n                target: this.chainNetwork === \"mainnet\" ? 12 : 6,\n            };\n        };\n        /**\n         * See [[OriginChain.getGatewayAddress]].\n         */\n        this.getGatewayAddress = (asset, compressedPublicKey, gHash) => {\n            if (!this.chainNetwork) {\n                throw new Error(`${name} object not initialized`);\n            }\n            this.assetAssetSupported(asset);\n            const isTestnet = this.chainNetwork === \"testnet\";\n            const ec = new elliptic.ec(\"secp256k1\");\n            const publicKey = ec\n                .keyFromPublic(compressedPublicKey)\n                .getPublic(false, \"hex\");\n            const payload = Buffer.from(blake2b(Buffer.from(publicKey, \"hex\"), null, 20));\n            // secp256k1 protocol prefix\n            const protocol = 1;\n            // network prefix\n            const networkPrefix = isTestnet ? \"t\" : \"f\";\n            const addressObject = {\n                str: Buffer.concat([Buffer.from([protocol]), payload]),\n                protocol: () => protocol,\n                payload: () => payload,\n            };\n            const address = encodeAddress(networkPrefix, addressObject);\n            return {\n                address,\n                params: toBase64(Buffer.from(toURLBase64(gHash))),\n            };\n        };\n        this.getPubKeyScript = (asset, _publicKey, _gHash) => {\n            this.assetAssetSupported(asset);\n            return Buffer.from([]);\n        };\n        /**\n         * See [[OriginChain.encodeAddress]].\n         */\n        this.encodeAddress = (address) => {\n            return Buffer.from(address.address);\n        };\n        /**\n         * See [[OriginChain.decodeAddress]].\n         */\n        this.decodeAddress = (encodedAddress) => {\n            return {\n                address: encodedAddress.toString(),\n            };\n        };\n        /**\n         * See [[OriginChain.addressIsValid]].\n         */\n        this.addressIsValid = (address) => {\n            if (!this.chainNetwork) {\n                throw new Error(`${name} object not initialized`);\n            }\n            assertType(\"string\", { address: address.address });\n            return this._addressIsValid(address, this.chainNetwork);\n        };\n        /**\n         * See [[OriginChain.addressExplorerLink]].\n         */\n        this.addressExplorerLink = (address) => {\n            // TODO: Provide multiple options, and check network.\n            return `https://filfox.info/en/address/${address.address}`;\n        };\n        /**\n         * See [[OriginChain.transactionExplorerLink]].\n         */\n        this.transactionID = (transaction) => transaction.cid;\n        this.transactionExplorerLink = (transaction) => {\n            // TODO: Provide multiple options, and check network.\n            return `https://filfox.info/en/message/${transaction.cid}`;\n        };\n        this.depositV1HashString = (_deposit) => {\n            throw new Error(NETWORK_NOT_SUPPORTED);\n        };\n        this.transactionRPCFormat = (transaction, v2) => {\n            if (!v2) {\n                throw new Error(NETWORK_NOT_SUPPORTED);\n            }\n            return {\n                txid: Buffer.from(new CID(transaction.cid).bytes),\n                txindex: transaction.nonce.toFixed(),\n            };\n        };\n        this.Address = (address) => {\n            // Type validation\n            assertType(\"string\", { address });\n            this.getBurnPayload = () => address;\n            return this;\n        };\n        this.burnPayload = () => {\n            return this.getBurnPayload ? this.getBurnPayload() : undefined;\n        };\n        this.chainNetwork = network;\n    }\n}\nexport const Filecoin = Callable(FilecoinClass);\n//# sourceMappingURL=filecoin.js.map","import BigNumber from \"bignumber.js\";\nimport { assertType } from \"./assert\";\nimport { fromHex, Ox } from \"./common\";\nimport { generateSighash } from \"./renVMHashes\";\nexport const signatureToBuffer = (sig) => Buffer.concat([sig.r, sig.s, Buffer.from([sig.v])]);\nconst switchV = (v) => (v === 27 ? 28 : 27); // 28 - (v - 27);\nconst to32Bytes = (bn) => fromHex((\"0\".repeat(64) + bn.toString(16)).slice(-64));\nexport const secp256k1n = new BigNumber(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16);\nexport const fixSignatureSimple = (r, s, v) => {\n    assertType(\"Buffer\", { r, s });\n    let sBN = new BigNumber(Ox(s), 16);\n    let vFixed = ((v || 0) % 27) + 27;\n    // For a given key, there are two valid signatures for each signed message.\n    // We always take the one with the lower `s`.\n    // secp256k1n/2 = 57896044618658097711785492504343953926418782139537452191302581570759080747168.5\n    if (sBN.gt(secp256k1n.div(2))) {\n        // Take s = -s % secp256k1n\n        sBN = secp256k1n.minus(sBN);\n        // Switch v\n        vFixed = switchV(vFixed);\n    }\n    return {\n        r,\n        s: to32Bytes(sBN),\n        v: vFixed,\n    };\n};\nexport const fixSignature = (r, s, v, sigHash, pHash, amount, to, tokenIdentifier, nHash, v2, logger) => {\n    // Type validation\n    assertType(\"string\", { amount, to, tokenIdentifier });\n    assertType(\"Buffer\", { r, s, sigHash, pHash, nHash });\n    if (logger) {\n        const expectedSighash = generateSighash(pHash, amount, to, tokenIdentifier, nHash, v2, logger);\n        if (Ox(sigHash) !== Ox(expectedSighash)) {\n            logger.warn(`Warning: unexpected signature hash returned from RenVM. Expected ${expectedSighash}, got ${sigHash}.`);\n        }\n    }\n    // TODO: Fix code below to check against proper mintAuthority\n    // // Currently, the wrong `v` value may be returned from RenVM. We recover the\n    // // address to see if we need to switch `v`. This can be removed once RenVM\n    // // has been updated.\n    // const recovered = {\n    //     [v]: pubToAddress(ecrecover(\n    //         fromHex(response.autogen.sighash)),\n    //         v,\n    //         fromHex(r),\n    //         s.toArrayLike(Buffer, \"be\", 32),\n    //     )),\n    //     [switchV(v)]: pubToAddress(ecrecover(\n    //         fromHex(response.autogen.sighash),\n    //         switchV(v),\n    //         fromHex(r),\n    //         s.toArrayLike(Buffer, \"be\", 32),\n    //     )),\n    // };\n    // const expected = fromHex(.network.renVM.mintAuthority);\n    // if (recovered[v].equals(expected)) {\n    //     // Do nothing\n    // } else if (recovered[switchV(v)].equals(expected)) {\n    //     // tslint:disable-next-line: no-console\n    //     console.info(\"[info][ren-js] switching v value\");\n    //     v = switchV(v);\n    // } else {\n    //     throw new Error(`Invalid signature - unable to recover mint authority from signature (Expected ${Ox(expected)}, got ${Ox(recovered[v])})`);\n    // }\n    return fixSignatureSimple(r, s, v);\n};\n//# sourceMappingURL=signatureUtils.js.map","// tslint:disable: no-console react-this-binding-issue\n\nimport * as React from \"react\";\n\nimport Web3 from \"web3\";\nimport RenJS from \"@renproject/ren\";\nimport { LockAndMintDeposit } from \"@renproject/ren/build/main/lockAndMint\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { Loading } from \"@renproject/react-components\";\n\nimport { startMint } from \"../lib/mint\";\nimport { ReactComponent as MetaMaskLogo } from \"./styles/metamask.svg\";\n\ninterface Props {\n    asset: string;\n    renJS: RenJS;\n    web3: Web3 | null;\n    network: string;\n    addDeposit: (txHash: string, deposit: LockAndMintDeposit) => void;\n}\n\nconst ClickToCopy = ({ text }: { text: string }) => {\n    const [copied, setCopied] = React.useState(false);\n    const onClick = React.useCallback(() => {\n        if (copied) {\n            return;\n        }\n        setCopied(true);\n        setTimeout(() => setCopied(false), 2 * 1000);\n    }, [setCopied, copied]);\n    return (\n        <CopyToClipboard text={text} onClick={onClick}>\n            <span\n                onClick={onClick}\n                className={`copy ${copied ? \"copied\" : \"\"}`}\n            >\n                {copied ? \"Copied\" : text}\n            </span>\n        </CopyToClipboard>\n    );\n};\n\nexport const MintForm: React.FC<Props> = ({\n    asset,\n    renJS,\n    web3,\n    network,\n    addDeposit,\n}) => {\n    const isTestnet = network === \"testnet\" || network === \"devnet\";\n\n    const [errorMessage, setErrorMessage] = React.useState(\n        null as string | null,\n    );\n\n    const [ethereumAddress, setEthereumAddress] = React.useState<string | null>(\n        null,\n    );\n\n    const [generatingAddress, setGeneratingAddress] = React.useState(false);\n    const [depositAddress, setDepositAddress] = React.useState<\n        string | { address: string; params?: string } | null\n    >(null);\n\n    const onSubmit = React.useCallback(\n        async (event: React.FormEvent<HTMLFormElement>) => {\n            event.preventDefault();\n            setGeneratingAddress(true);\n            setDepositAddress(null);\n\n            if (!web3) {\n                setErrorMessage(\"Please use a Web3 browser\");\n                return;\n            }\n            if (!ethereumAddress) {\n                setErrorMessage(\"Please enter a valid Ethereum address.\");\n                return;\n            }\n            setErrorMessage(null);\n            try {\n                await startMint(\n                    web3,\n                    renJS,\n                    ethereumAddress,\n                    setDepositAddress,\n                    asset,\n                    addDeposit,\n                );\n            } catch (error) {\n                console.error(error);\n                setErrorMessage(\n                    String(\n                        error.message || error.error || JSON.stringify(error),\n                    ),\n                );\n            }\n            setGeneratingAddress(false);\n        },\n        [asset, renJS, ethereumAddress, web3, addDeposit],\n    );\n\n    const useMetaMaskAccount = React.useCallback(async () => {\n        if (!web3) {\n            setErrorMessage(\"Please use a Web3 browser\");\n            return;\n        }\n        try {\n            setEthereumAddress((await web3.eth.getAccounts())[0]);\n        } catch (error) {\n            console.error(error);\n        }\n    }, [web3, setEthereumAddress]);\n\n    const addressIsValid: boolean = React.useMemo(() => {\n        return !!(\n            ethereumAddress &&\n            ethereumAddress.match(/(^0x[A-Fa-f0-9]{40}$)|(^.*\\.eth$)/)\n        );\n    }, [ethereumAddress]);\n\n    return (\n        <form\n            onSubmit={onSubmit}\n            className={generatingAddress ? \"disabled\" : \"\"}\n        >\n            <div className=\"send\">\n                <input\n                    className=\"no-right-border\"\n                    value={ethereumAddress || \"\"}\n                    onChange={(e) => {\n                        setEthereumAddress(e.target.value);\n                    }}\n                    placeholder={`Recipient (${\n                        isTestnet ? \"Rinkeby\" : \"Ethereum\"\n                    } address)`}\n                />\n                <div\n                    role=\"button\"\n                    className=\"box box-action no-left-border\"\n                    onClick={useMetaMaskAccount}\n                >\n                    <MetaMaskLogo />\n                </div>\n            </div>\n            <div className=\"send\">\n                <button\n                    disabled={generatingAddress || !addressIsValid}\n                    type=\"submit\"\n                    className={`blue ${\n                        generatingAddress || !addressIsValid ? \"disabled\" : \"\"\n                    }`}\n                >\n                    {generatingAddress ? <Loading alt={true} /> : <>Mint</>}\n                </button>\n            </div>\n            {depositAddress ? (\n                <>\n                    <div className=\"deposit-address\">\n                        Deposit <b>{asset}</b> to\n                        {typeof depositAddress === \"string\" ? (\n                            <p>\n                                <b>Address:</b>{\" \"}\n                                <ClickToCopy text={depositAddress} />\n                            </p>\n                        ) : (\n                            <>\n                                <p>\n                                    <b>Address:</b>{\" \"}\n                                    <ClickToCopy\n                                        text={depositAddress.address}\n                                    />\n                                </p>\n                                {depositAddress.params ? (\n                                    <div>\n                                        <b>Params:</b>\n                                        <p>\n                                            Base64:{\" \"}\n                                            <ClickToCopy\n                                                text={depositAddress.params}\n                                            />\n                                        </p>\n                                        <p>\n                                            Hex:{\" \"}\n                                            <ClickToCopy\n                                                text={Buffer.from(\n                                                    depositAddress.params,\n                                                    \"base64\",\n                                                ).toString(\"hex\")}\n                                            />\n                                        </p>\n                                    </div>\n                                ) : null}\n                            </>\n                        )}\n                    </div>\n                    <div className=\"deposit-loading\">\n                        Watching for deposits...{\" \"}\n                        <Loading style={{ display: \"inline-block\" }} />\n                    </div>\n                </>\n            ) : null}\n\n            {errorMessage ? <p className=\"box red\">{errorMessage}</p> : <></>}\n        </form>\n    );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.metamask-st0{fill:#161616;stroke:#161616;}\\n\\t.metamask-st1{fill:#E4761B;stroke:#E4761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.metamask-st2{fill:#763D16;stroke:#763D16;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.metamask-st3{fill:#F6851B;stroke:#F6851B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.metamask-st4{fill:#E2761B;stroke:#E2761B;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.metamask-st5{fill:#CD6116;stroke:#CD6116;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.metamask-st6{fill:#C0AD9E;stroke:#C0AD9E;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.metamask-st7{fill:#D7C1B3;stroke:#D7C1B3;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.metamask-st8{fill:#E4751F;stroke:#E4751F;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.metamask-st9{fill:#233447;stroke:#233447;stroke-linecap:round;stroke-linejoin:round;}\\n\\t.metamask-st10{fill:#161616;stroke:#161616;stroke-linecap:round;stroke-linejoin:round;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st0\",\n  points: \"277.3,145.6 272.3,142 280.3,134.7 274.2,129.9 282.2,123.8 276.9,119.8 285.3,79 272.7,41.1  191.6,71.4 124.1,71.4 43,41.1 30.4,79 38.9,119.8 33.5,123.8 41.5,129.9 35.4,134.7 43.4,142 38.4,145.6 49.9,159.1 32.5,213.3  48.6,268.6 105.3,253 116.3,262 138.7,277.5 177,277.5 199.4,262 210.4,253 267.1,268.6 283.3,213.3 265.8,159.1 \"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"105.3,253 48.6,268.6 32.5,213.3  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"283.3,213.3 267.1,268.6 210.4,253  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"265.8,159.1 213.5,143.8 231.8,139  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"49.9,159.1 84,139 102.2,143.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"43.4,142 41.5,129.9 84,139  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"272.3,142 231.8,139 274.2,129.9  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"272.3,142 265.8,159.1 231.8,139  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"43.4,142 84,139 49.9,159.1  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"231.8,139 276.9,119.8 274.2,129.9  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"84,139 41.5,129.9 38.9,119.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"124.1,71.4 191.6,71.4 176.5,112.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"176.5,112.5 139.2,112.5 124.1,71.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"276.9,119.8 231.8,139 231,87.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"102.2,143.8 84,139 84.7,87.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"84.7,87.4 84,139 38.9,119.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"231,87.4 231.8,139 213.5,143.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"139.2,112.5 43,41.1 124.1,71.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st4\",\n  points: \"272.7,41.1 176.5,112.5 191.6,71.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"210.4,253 236.9,213.3 283.3,213.3  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"32.5,213.3 78.9,213.3 105.3,253  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"229.3,167.7 283.3,213.3 236.9,213.3  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"86.4,167.7 32.5,213.3 49.9,159.1  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"78.9,213.3 32.5,213.3 86.4,167.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"229.3,167.7 265.8,159.1 283.3,213.3  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"84.7,87.4 139.2,112.5 102.2,143.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"213.5,143.8 176.5,112.5 231,87.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"265.8,159.1 272.3,142 277.3,145.6  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"49.9,159.1 38.4,145.6 43.4,142  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"272.3,142 274.2,129.9 280.3,134.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"43.4,142 35.4,134.7 41.5,129.9  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"33.5,123.8 38.9,119.8 41.5,129.9  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"282.2,123.8 274.2,129.9 276.9,119.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"49.9,159.1 102.2,143.8 86.4,167.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"265.8,159.1 229.3,167.7 213.5,143.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"38.9,119.8 30.4,79 84.7,87.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"231,87.4 285.3,79 276.9,119.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"102.2,143.8 139.2,112.5 142.6,170.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"213.5,143.8 229.3,167.7 173.1,170.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"173.1,170.2 176.5,112.5 213.5,143.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"142.6,170.2 86.4,167.7 102.2,143.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"272.7,41.1 285.3,79 231,87.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"43,41.1 139.2,112.5 84.7,87.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"231,87.4 176.5,112.5 272.7,41.1  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st2\",\n  points: \"84.7,87.4 30.4,79 43,41.1  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st5\",\n  points: \"105.3,253 78.9,213.3 110,213.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st5\",\n  points: \"210.4,253 205.7,213.7 236.9,213.3  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"173.1,170.2 142.6,170.2 139.2,112.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"139.2,112.5 176.5,112.5 173.1,170.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"116.3,262 105.3,253 136.8,267.9  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"178.9,267.9 210.4,253 199.4,262  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st7\",\n  points: \"136.6,258.6 136.8,267.9 105.3,253  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st7\",\n  points: \"179.2,258.6 210.4,253 178.9,267.9  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"86.4,167.7 110,213.7 78.9,213.3  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"236.9,213.3 205.7,213.7 229.3,167.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st8\",\n  points: \"86.4,167.7 109.2,190.8 110,213.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st8\",\n  points: \"229.3,167.7 205.7,213.7 206.6,190.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st7\",\n  points: \"105.3,253 139.2,236.5 136.6,258.6  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st7\",\n  points: \"210.4,253 179.2,258.6 176.5,236.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"139.2,236.5 105.3,253 110,213.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st1\",\n  points: \"176.5,236.5 205.7,213.7 210.4,253  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st5\",\n  points: \"173.1,170.2 229.3,167.7 206.6,190.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st5\",\n  points: \"109.2,190.8 86.4,167.7 142.6,170.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st5\",\n  points: \"142.6,170.2 129.1,181.7 109.2,190.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st5\",\n  points: \"206.6,190.8 186.6,181.7 173.1,170.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"205.7,213.7 178.3,199.1 206.6,190.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"110,213.7 109.2,190.8 137.4,199.1  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st9\",\n  points: \"137.4,199.1 109.2,190.8 129.1,181.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st9\",\n  points: \"178.3,199.1 186.6,181.7 206.6,190.8  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st5\",\n  points: \"186.6,181.7 178.3,199.1 173.1,170.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st5\",\n  points: \"129.1,181.7 142.6,170.2 137.4,199.1  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"199.4,262 177,277.5 178.9,267.9  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"136.8,267.9 138.7,277.5 116.3,262  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st4\",\n  points: \"178.3,199.1 171.8,188.4 173.1,170.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st8\",\n  points: \"137.4,199.1 142.6,170.2 143.9,188.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"173.1,170.2 171.8,188.4 143.9,188.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"143.9,188.4 142.6,170.2 173.1,170.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"178.3,199.1 205.7,213.7 176.5,236.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"139.2,236.5 110,213.7 137.4,199.1  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"137.4,199.1 144,233.2 139.2,236.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"176.5,236.5 171.7,233.2 178.3,199.1  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st8\",\n  points: \"171.8,188.4 178.3,199.1 171.7,233.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st8\",\n  points: \"143.9,188.4 144,233.2 137.4,199.1  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"143.9,188.4 171.8,188.4 171.7,233.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st3\",\n  points: \"171.7,233.2 144,233.2 143.9,188.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"179.2,258.6 178.9,267.9 177,277.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"138.7,277.5 136.8,267.9 136.6,258.6  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"136.6,258.6 139,256.4 138.7,277.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"177,277.5 176.7,256.4 179.2,258.6  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"138.7,277.5 139,256.4 176.7,256.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st6\",\n  points: \"176.7,256.4 177,277.5 138.7,277.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"176.5,236.5 179.2,258.6 176.7,256.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"139,256.4 136.6,258.6 139.2,236.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"139.2,236.5 140.7,241.2 139,256.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"176.7,256.4 175,241.2 176.5,236.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"143.7,237.7 140.7,241.2 139.2,236.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"176.5,236.5 175,241.2 172,237.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"172,237.7 171.7,233.2 176.5,236.5  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"139.2,236.5 144,233.2 143.7,237.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"171.7,233.2 172,237.7 143.7,237.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"143.7,237.7 144,233.2 171.7,233.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"140.7,241.2 175,241.2 176.7,256.4  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"176.7,256.4 139,256.4 140.7,241.2  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"140.7,241.2 143.7,237.7 172,237.7  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  className: \"metamask-st10\",\n  points: \"172,237.7 175,241.2 140.7,241.2  \"\n}));\n\nvar SvgMetamask = (_ref) => {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 318.6 318.6\",\n    style: {\n      enableBackground: \"new 0 0 318.6 318.6\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgMetamask, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/metamask.3fcae91e.svg\";\nexport { ForwardRef as ReactComponent };"],"sourceRoot":""}